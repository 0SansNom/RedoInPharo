----QUIT----2020-01-22T20:54:30.239682+01:00 Pharo8.0-SNAPSHOT-32bit-0932da8.image priorSource: 0!----QUIT----2020-01-22T20:54:52.539489+01:00 Pharo8.0-SNAPSHOT-32bit-0932da8.image priorSource: 0!Object subclass: #Counter	instanceVariableNames: 'count'	classVariableNames: ''	package: 'MyCounter'!!Counter methodsFor: 'as yet unclassified' stamp: 'Anonymous 2/18/2021 17:07'!count 		^ count! !!Counter methodsFor: 'accessing' stamp: 'Anonymous 2/18/2021 17:09'!count: anInteger		count := anInteger! !TestCase subclass: #CounterTest	instanceVariableNames: 'count'	classVariableNames: ''	package: 'MyCounter'!!Counter methodsFor: 'as yet unclassified' stamp: 'Anonymous 2/25/2021 01:09'!count 	^ count! !!Counter methodsFor: 'accessing' stamp: 'Anonymous 2/25/2021 01:10'!count: anInteger	^ count := anInteger ! !TestCase subclass: #CounterTest	instanceVariableNames: 'count'	classVariableNames: ''	package: 'MyCounter'!!CounterTest methodsFor: 'as yet unclassified' stamp: 'Anonymous 2/25/2021 01:18'!testCounterIsSetAndRead| c | c:= Counter new.c counter: 7.self  assert: c count equals: 7! !!CounterTest methodsFor: 'tests' stamp: 'Anonymous 2/25/2021 01:25' prior: 33555467!testCounterIsSetAndRead| c | c:= Counter new.c count: 7.self assert: c count equals: 7! !----SNAPSHOT----2021-02-25T01:26:20.214319+01:00 ReDO.image priorSource: 100!!CounterTest methodsFor: 'tests' stamp: 'Anonymous 2/25/2021 01:32'!testIncrement| c | c:= Counter new.c count: 2.c increment ; increment.self assert: c count equals: 4! !!Counter methodsFor: 'as yet unclassified' stamp: 'Anonymous 2/25/2021 01:33'!increment  count := count  + 1! !!CounterTest methodsFor: 'tests' stamp: 'Anonymous 2/25/2021 01:34'!testDecrement| c | c:= Counter new.c count: 2.c decrement ; decrement.self assert: c count equals: 0! !!Counter methodsFor: 'accessing' stamp: 'Anonymous 2/25/2021 01:35' prior: 33556082!increment  count := count  - 1! !!Counter methodsFor: 'accessing' stamp: 'Anonymous 2/25/2021 01:35'!decrement  count := count  - 1! !!Counter methodsFor: 'accessing' stamp: 'Anonymous 2/25/2021 01:36' prior: 33556485!decrement  count := count  + 1! !!Counter methodsFor: 'accessing' stamp: 'Anonymous 2/25/2021 01:39' prior: 33556381!increment  count := count  + 1! !!Counter methodsFor: 'accessing' stamp: 'Anonymous 2/25/2021 01:39' prior: 33556605!decrement  count := count  - 1! !----SNAPSHOT----2021-02-25T01:40:22.386319+01:00 ReDO.image priorSource: 1312!!CounterTest methodsFor: 'tests' stamp: 'Anonymous 2/25/2021 01:45'!testInitialize| c | c:= Counter new.self assert: c count equals: 0! !!Counter methodsFor: 'accessing' stamp: 'Anonymous 2/25/2021 01:49'!initialize  super initialize.count:= 0! !!CounterTest methodsFor: 'as yet unclassified' stamp: 'Anonymous 2/25/2021 01:53'!testStartingAtFive| c |c := Counter startingAt: 5.self assert c count equals: 5! !!Counter methodsFor: 'accessing' stamp: 'Anonymous 2/25/2021 01:54'!startingAt: anIntegercount:= anInteger ! !!Counter methodsFor: 'accessing' stamp: 'Anonymous 2/25/2021 01:56' prior: 33557454!startingAt: anInteger		^ self new count: anInteger ! !!CounterTest methodsFor: 'tests' stamp: 'Anonymous 2/25/2021 01:57' prior: 33557298!testStartingAtFive| c |c := Counter startingAt: 5.self assert: c count equals: 5! !!Counter methodsFor: 'accessing' stamp: 'Anonymous 2/25/2021 01:59' prior: 33557583!startingAt: anInteger		^ Counter new count: anInteger ! !!Counter methodsFor: 'accessing' stamp: 'Anonymous 2/25/2021 01:59' prior: 33557898!startingAt: anInteger		^ self new count: anInteger ! !!Counter methodsFor: 'accessing' stamp: 'Anonymous 2/25/2021 02:06' prior: 33558043!startingAt: anInteger ^ self new count: anInteger! !!Counter methodsFor: 'accessing' stamp: 'Anonymous 2/25/2021 02:07' prior: 33558185!startingAt: anInteger ^ self count: anInteger! !!Counter methodsFor: 'accessing' stamp: 'Anonymous 2/25/2021 02:10' prior: 33558324!startingAt: anInteger	super initialize. ^ self new count: anInteger! !!Counter methodsFor: 'accessing' stamp: 'Anonymous 2/25/2021 02:12' prior: 33558459!startingAt: anInteger	count := anInteger. ^ count! !!Counter methodsFor: 'accessing' stamp: 'Anonymous 2/25/2021 02:13' prior: 33558618!startingAt: anInteger	count := anInteger. ^ self new count: anInteger ! !!Counter methodsFor: 'accessing' stamp: 'Anonymous 2/25/2021 02:13' prior: 33558758!startingAt: anInteger ^ self new count: anInteger ! !!Counter methodsFor: 'accessing' stamp: 'Anonymous 2/25/2021 02:13' prior: 33558919!startingAt: anInteger ^ self new count: anInteger ! !!Counter class methodsFor: 'as yet unclassified' stamp: 'Anonymous 2/25/2021 02:19'!startingAt: anInteger ^ self new count: anInteger! !Counter removeSelector: #startingAt:!!Counter class methodsFor: 'as yet unclassified' stamp: 'Anonymous 2/25/2021 02:23' prior: 33559200!startingAt: anInteger ^ self new count: anInteger! !!CounterTest methodsFor: 'tests' stamp: 'Anonymous 2/25/2021 02:24' prior: 33557725!testStartingAtFive| c |c := Counter startingAt: 5.self assert: c equals: 5! !!CounterTest methodsFor: 'tests' stamp: 'Anonymous 2/25/2021 02:26'!testAllMethods| c |c := Counter startingAt: 5.self assert: (c increment ; count) equals: 5! !!CounterTest methodsFor: 'tests' stamp: 'Anonymous 2/25/2021 02:26' prior: 33559686!testAllMethods| c |c := Counter startingAt: 5.self assert: (c increment ; count) equals: 6! !!CounterTest methodsFor: 'tests' stamp: 'Anonymous 2/25/2021 02:27' prior: 33559868!testAllMethods| c |c := Counter startingAt: 5.self assert: (c increment ; c) equals: 6! !!CounterTest methodsFor: 'tests' stamp: 'Anonymous 2/25/2021 02:28' prior: 33560050!testAllMethods| c |c := Counter startingAt: 5.self assert: (c increment ; count) equals: 6! !!CounterTest methodsFor: 'tests' stamp: 'Anonymous 2/25/2021 02:28' prior: 33560228!testAllMethods| c |c := Counter startingAt: 5.self assert: (c increment ; count) equals: 6! !!CounterTest methodsFor: 'tests' stamp: 'Anonymous 2/25/2021 02:29' prior: 33560410!testAllMethods| c |c := Counter startingAt: 5.self assert: (c increment ; increment)equals: 6! !!CounterTest methodsFor: 'tests' stamp: 'Anonymous 2/25/2021 02:32' prior: 33560592!testAllMethods| c |c := Counter startingAt: 5.self assert: (c increment ; count) equals: 6! !CounterTest removeSelector: #testAllMethods!